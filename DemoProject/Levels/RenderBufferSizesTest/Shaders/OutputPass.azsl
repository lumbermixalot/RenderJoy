/*
* All or portions of this file Copyright (c) Amazon.com, Inc. or its affiliates or
* its licensors.
*
* For complete copyright and license terms please see the LICENSE at the root of this
* distribution (the "License"). All use of this software is governed by the License,
* or, if provided, by the license below or the license accompanying this file. Do not
* remove or modify any license notices. This file is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*
*/

#include <RenderJoy/RenderJoyPassSrg.azsli>

// Simply displays the texture attached to channel0.
PSOutput MainPS(VSOutput IN)
{
    PSOutput OUT;
    
    // Normalized pixel coordinates (from 0 to 1)
    float2 uv = IN.m_position.xy / PassSrg::m_resolution.xy;

    float2 uvSample = uv * 2.0;
    uvSample = fmod(uvSample, float2(1,1));

    if (uv. x >= 0.5)
    {
        if (uv.y >= 0.5)
        {
        }
        else
        {
            uvSample.x = 1 - uvSample.x;
        }
    }
    else
    {
        if (uv.y >= 0.5)
        {
            uvSample.y = 1 - uvSample.y;
        }
        else
        {
        
        }
    }

    float4 texColor = iChannel0.Sample(PassSrg::LinearSampler, uvSample);
    OUT.m_color = float4(texColor.rgb,1);

    return OUT;
}
